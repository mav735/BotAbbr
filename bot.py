import json

import telebot
import time
from requests.exceptions import RequestException

bot = telebot.TeleBot('7060695421:AAGhq8DTppMGjYsf197ZWJAzCA01Iqpydec')
WAITING_FOR_ABBR, WAITING_FOR_MEANING = range(2)

user_states = {}
with open('abbr.json', 'r', encoding='utf-8') as json_file:
    data_dict = json.load(json_file)


def json_to_txt(j_file, txt_file):
    try:
        with open(j_file, 'r', encoding='utf-8') as f:
            data = json.load(f)

        with open(txt_file, 'w', encoding='utf-8') as f:
            for abbr, meaning in data.items():
                f.write(f"{abbr} ‚Äì {meaning}\n")

    except FileNotFoundError:
        print(f"File not found: {j_file}")
    except json.JSONDecodeError:
        print("Error decoding JSON data.")


@bot.message_handler(commands=["start"])
def start(m, res=False):
    bot.send_message(m.chat.id, '–ü—Ä–∏–≤–µ—Ç! \n'
                                '–Ø - –±–æ—Ç-–í–æ—Ä–¥–±—É–∫ ü§ñ\n'
                                '- —Ç–≤–æ–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–∏ –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä.\n \n'
                                '–ü–æ–º–æ–≥—É –±—ã—Å—Ç—Ä–æ –Ω–∞–π—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–æ–∫—Ä–∞—â–µ–Ω–∏–π –∏ –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –≤ —Ä–∞–±–æ—á–µ–º –ø—Ä–æ—Ü–µ—Å—Å–µ. \n'
                                '–ë–æ—Ç-—Å–ª–æ–≤–∞—Ä—å —Å—Ç–∞–Ω–µ—Ç –Ω–∞–¥–µ–∂–Ω—ã–º —Å–ø—É—Ç–Ω–∏–∫–æ–º –≤ —Ä–∞–±–æ—á–µ–º –ø—Ä–æ—Ü–µ—Å—Å–µ, –æ–±–ª–µ–≥—á–∞—è –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—é –∏ –ø–æ–≤—ã—à–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∫–æ–ª–ª–µ–≥–∞–º–∏ –∏ —Å–º–µ–∂–Ω—ã–º–∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è–º–∏üíØ')
    bot.send_message(m.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä—É, –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—åüëá')


@bot.message_handler(commands=['send_abbr_beautiful'])
def send_abbr_file(message):
    if message.chat.id == 431436587:  # Check if the user is authorized
        f_file = 'abbr.json'
        txt_file = 'abbr.txt'

        json_to_txt(f_file, txt_file)

        with open(txt_file, 'rb') as f:
            bot.send_document(message.chat.id, f, caption="Here is the abbr.txt file.")
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")


@bot.message_handler(commands=["send_abbr_file"])
def send_abbr_file(m):
    if m.chat.id == 431436587:
        with open('abbr.json', 'rb') as file:
            bot.send_document(m.chat.id, file)
    else:
        bot.send_message(m.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")


@bot.message_handler(commands=['new_abbr'])
def new_abbr_command(message):
    if message.chat.id == 431436587:  # Check if the user is authorized
        user_states[message.chat.id] = WAITING_FOR_ABBR
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä—É:")
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")


@bot.message_handler(func=lambda message: user_states.get(message.chat.id) == WAITING_FOR_ABBR)
def receive_abbr(message):
    if message.chat.id == 431436587:  # Check if the user is authorized
        abbr = message.text.strip()
        user_states[message.chat.id] = WAITING_FOR_MEANING  # Set state to waiting for meaning
        user_states[str(message.chat.id) + '_abbr'] = abbr
        bot.send_message(message.chat.id, "–¢–µ–ø–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä—ã:")
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")


@bot.message_handler(func=lambda message: user_states.get(message.chat.id) == WAITING_FOR_MEANING)
def receive_meaning(message):
    if message.chat.id == 431436587:
        meaning = message.text.strip()
        abbr = user_states.get(str(message.chat.id) + '_abbr')
        data_dict[abbr] = meaning

        with open('abbr.json', 'w', encoding='utf-8') as file:
            json.dump(data_dict, file)

        reload_abbrs()

        bot.send_message(message.chat.id, f"–ê–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä–∞ '{abbr}' —Å –∑–Ω–∞—á–µ–Ω–∏–µ–º '{meaning}' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!")

        del user_states[message.chat.id]
        del user_states[str(message.chat.id) + '_abbr']
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")


def reload_abbrs():
    global data_dict
    with open('abbr.json', 'r', encoding='utf-8') as j_file:
        data_dict = json.load(j_file)


@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    if message.text.lower() in data_dict.keys():
        bot.send_message(message.from_user.id, data_dict[message.text.lower()])
    else:
        chat_id = 431436587
        bot.send_message(message.from_user.id, '–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä—ãüòû \n'
                                               '–ù–æ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª –í–∞—à –∑–∞–ø—Ä–æ—Å —Å–æ–∑–¥–∞—Ç–µ–ª—é –±–æ—Ç–∞ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π!')
        bot.send_message(chat_id, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—ã—Ç–∞–ª—Å—è –Ω–∞–π—Ç–∏ –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä—É: ' + message.text)


bot.polling(none_stop=True, interval=0)

while True:
    try:
        bot.infinity_polling(timeout=10, long_polling_timeout=5)
    except RequestException as err:
        print(err)
        print('* Connection failed, waiting to reconnect...')
        time.sleep(15)
        print('* Reconnecting.')
